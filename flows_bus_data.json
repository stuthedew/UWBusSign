[{"type":"tab","id":"9d2467e1.62db98","label":"Random Delay Crash"},{"id":"861bb91f.79e448","type":"websocket-listener","path":"/ws/data","wholemsg":"true"},{"id":"13b0ba4.fec4f46","type":"mongodb","hostname":"127.0.0.1","port":"27017","db":"data","name":"Bus Data"},{"id":"6ad83609.9527c8","type":"mongodb","hostname":"127.0.0.1","port":"27017","db":"test","name":""},{"id":"25fac81a.da0538","type":"inject","name":"","topic":"","payload":"","repeat":"29","crontab":"","once":true,"x":84,"y":139,"z":"9d2467e1.62db98","wires":[["ac2e190a.53d1e8","e04c1f0d.1fb3e"]]},{"id":"ac2e190a.53d1e8","type":"function","name":"Set Route","func":"// The received message is stored in 'msg'\n// It will have at least a 'payload' property:\n//   console.log(msg.payload);\n// The 'context' object is available to store state\n// between invocations of the function\n//   context = {};\n// initialise the counter to 0 if it doesn't exist already\ncontext.routes = [2, 10, 28, 38, 80];\ncontext.destinations = [115, 161, 115, 43, 125];\ncontext.stop = 1347;\ncontext.global.inc = context.global.inc || 0; \ncontext.routeNum = context.routes.length;\n//console.log(\"global inc: \" + context.global.inc + \" Route Length: \" + context.routeNum);\nmsg = {};\nif (context.global.inc < context.routeNum){\nmsg.payload = {};\nmsg.route = context.routes[context.global.inc];\nmsg.destination = context.destinations[context.global.inc];\nmsg.stop = context.stop;\nmsg.inc = context.global.inc;\n\n//console.log(\"route Num: \" + context.routes[context.global.inc]);\ncontext.global.inc += 1;\nreturn msg;\n}\n\nelse{\ncontext.global.inc = 0;\n\nconsole.log(\"\\n\");\nreturn null;\n};","outputs":"1","x":195,"y":224,"z":"9d2467e1.62db98","wires":[["f1d76dae.0e289"]]},{"id":"f1d76dae.0e289","type":"template","name":"URL Gen","template":"r={{route}}&d={{destination}}&s={{stop}}","x":171,"y":56,"z":"9d2467e1.62db98","wires":[["991523e7.66eae"]]},{"id":"991523e7.66eae","type":"function","name":"Set URL","func":"// The received message is stored in 'msg'\n// It will have at least a 'payload' property:\n//   console.log(msg.payload);\n// The 'context' object is available to store state\n// between invocations of the function\n//   context = {};\nmsg.url = {};\n\nmsg.url = \"http://webwatch.cityofmadison.com/webwatch/ada.aspx?\" + msg.payload;\nmsg.payload = {};\n\nreturn msg;","outputs":1,"x":288,"y":87,"z":"9d2467e1.62db98","wires":[["e862ef0c.179d1"]]},{"id":"e862ef0c.179d1","type":"http request","name":"Get Route info","method":"GET","url":"","x":348,"y":146,"z":"9d2467e1.62db98","wires":[["9beb2d65.6414d"]]},{"id":"9beb2d65.6414d","type":"function","name":"Parse Arr Time","func":"//console.log(msg.payload);\n    if (~msg.payload.indexOf('WebWatch - ADA Website')) {\n    if (~msg.payload.indexOf('Vehicles Arrive')) {\n\n    \ttry{\n      var words = msg.payload.split(\"Vehicles Arrive\")[2].split(\"CrossingTimesTimeStamp\")[0].split('TO ',3);\n      var dest = msg.payload.split(\"Vehicles Arrive\")[2].split(\"CrossingTimesTimeStamp\")[0].split('TO ');\n      //console.log(dest[2]);\n      //console.log(dest.length);\n      }\n      catch(err){\n      console.log(\"########Cant't Split\");\n      console.log(msg.payload);\n      };\n\t\tvar time = [];\n\t\tvar d = [];\n\t\tvar inc = 0;\n      if (words.length >= 1) {\n\t\t\n\t\tvar temp;\n\t\tvar tempDest;\n\t\tvar oldDInc=0;\n\n        for (var i = 0; i < 3; i++){\n        try{\n        temp = words[i].split('title=\"')[1].split('\">')[0];\n        \n\t\t//console.log('start: ' + dest.indexOf(\"TO\", oldDInc) + \" end: \"+ dest.indexOf('</td>', dest.indexOf(\"TO\", oldDInc)));\n\t\ttempDest = dest[i+1].split('</td>')[0];\n\t\t//console.log(tempDest);\n        if(typeof temp != 'undefined' ){//& typeof tempDest != 'undefined'){\n        time[inc] = temp;\n        d[inc] = tempDest;\n        inc += 1;\t\n\t}}\n\tcatch(err){\n\tbreak;}\n\t}\n\t}\n\t\n      if(inc > 0){\n      msg.time = {};\n        msg.time = time;\n        msg.destName = d;\n        //console.log(\"Route: \" + msg.route);\n        //console.log(msg.time);\n        \n        \n        \n      \n\tmsg.url = {};\n    msg.payload = {};\n    msg.headers = {};\n    msg.statusCode = {};\n    return [null, msg];\n    }\n    }\n    return [1, null];\n    }\n    console.log(\"##############################Returning Null########################\");\n\n    \n    return [null, null];","outputs":"2","x":478,"y":54,"z":"9d2467e1.62db98","wires":[["af81001e.507f"],["611b57ea.9ee4a8"]]},{"id":"762f0e53.89d0f","type":"debug","name":"","active":false,"complete":"true","x":691,"y":101,"z":"9d2467e1.62db98","wires":[]},{"id":"af81001e.507f","type":"delay","name":"","pauseType":"rate","timeout":"5","timeoutUnits":"seconds","rate":"5","rateUnits":"second","randomFirst":"1","randomLast":"10","randomUnits":"seconds","x":267,"y":431,"z":"9d2467e1.62db98","wires":[["ac2e190a.53d1e8"]]},{"id":"4bca979.fb43568","type":"mongodb out","mongodb":"13b0ba4.fec4f46","name":"","collection":"data","payonly":false,"operation":"store","x":796.75,"y":195.75,"z":"9d2467e1.62db98","wires":[]},{"id":"611b57ea.9ee4a8","type":"function","name":"Format DB message","func":"// The received message is stored in 'msg'\n// It will have at least a 'payload' property:\n//   console.log(msg.payload);\n// The 'context' object is available to store state\n// between invocations of the function\n//   context = {};\n//console.log(\"format Db\");\n\n//context.global.totInc = context.global.totInc || 0; \ncontext.timeInc = context.timeInc || 0;\ncontext.msgLength = context.msgLength || 0;\ncontext.temp = context.temp || 0;\ncontext.firstCall = context.firstCall || 0;\n//console.log(\"Inc: \" + context.timeInc + \" Msg length: \" + context.msgLength);\n\nif(context.firstCall == 0){\ncontext.msgLength = msg.time.length;\n\n//console.log('First Call');\ncontext.firstCall = 1;\ncontext.temp = msg;\n//console.log(context.temp.destName);\n};\n\n\nif(context.timeInc < context.msgLength){\n//console.log(\"Time Inc: \" + context.timeInc);\n//console.log(context.msgLength);\nmsg ={};\nmsg._id = context.temp.inc*10 + context.timeInc;\n//console.log(\"Msg ID: \" + msg._id);\nmsg.route = context.temp.route;\nmsg.stop = context.temp.stop;\nmsg.time = context.temp.time[context.timeInc];\nmsg.dest = context.temp.destName[context.timeInc];\n\n//context.global.totInc += 1;\ncontext.timeInc += 1;\n\n//console.log(msg);\nreturn [msg, null];\n}\nelse {\ncontext.msgLength = 0;\ncontext.timeInc = 0;\ncontext.firstCall = 0;\n//console.log('next route');\nreturn [null, 1];\n};","outputs":"2","x":485,"y":321,"z":"9d2467e1.62db98","wires":[["ced36541.312c98"],["af81001e.507f"]]},{"id":"ced36541.312c98","type":"function","name":"Convert Date","func":"// The received message is stored in 'msg'\n// It will have at least a 'payload' property:\n//   console.log(msg.payload);\n// The 'context' object is available to store state\n// between invocations of the function\n//   context = {};\n//console.log(Date.now());\nvar verbose = 1; //print data if true\n\n\nvar busHour = parseInt(msg.time.split(':')[0]);\nvar busMin = parseInt(msg.time.split(':')[1]);\nvar PM = msg.time.search(\"P\");\n//convert to 24 hour clock\nif(PM >=0 & busHour != 12){\nbusHour += 12;\n}\n//correct for midnight\nelse if(busHour == 12 & PM < 0){\nbusHour = 0;\n};\nvar now = new Date();\n\nvar busDate = new Date(now.getTime());\n\nbusDate.setHours(busHour);\n\nbusDate.setMinutes(busMin);\nif(busHour < now.getHours()){\nbusDate.setDate(now.getDate() + 1);\n};\nif(verbose == 1){\nconsole.log('Route: ' + msg.route);\nconsole.log('Destination: ' + msg.dest);\nconsole.log('Current Time: ' + now.toString());\nconsole.log('Arrival Time: ' + busDate.toString());\nmsg.time = (busDate.getTime() - now.getTime())/60000;\nconsole.log(\"Arriving in \" + msg.time + ' minutes.\\n');\n//console.log(msg);\n//console.log(busHour);\n//console.log(busMin);\n};\nreturn msg;","outputs":1,"x":646,"y":429,"z":"9d2467e1.62db98","wires":[["85949fd7.7a6b6","4bca979.fb43568"]]},{"id":"85949fd7.7a6b6","type":"delay","name":"","pauseType":"delay","timeout":"10","timeoutUnits":"milliseconds","rate":"18","rateUnits":"second","randomFirst":"1","randomLast":"5","randomUnits":"seconds","x":615,"y":187,"z":"9d2467e1.62db98","wires":[["611b57ea.9ee4a8"]]},{"id":"2f948f38.d06b7","type":"mongodb out","mongodb":"13b0ba4.fec4f46","name":"Clear DB","collection":"data","payonly":false,"operation":"delete","x":115,"y":451,"z":"9d2467e1.62db98","wires":[]},{"id":"e04c1f0d.1fb3e","type":"function","name":"Clear DB","func":"// The received message is stored in 'msg'\n// It will have at least a 'payload' property:\n//   console.log(msg.payload);\n// The 'context' object is available to store state\n// between invocations of the function\n//   context = {};\nmsg.payload = {};\n\nreturn msg;","outputs":1,"x":81,"y":358,"z":"9d2467e1.62db98","wires":[["2f948f38.d06b7"]]},{"id":"506deed2.af921","type":"inject","name":"Clear Screen","topic":"","payload":"","repeat":"","crontab":"01 01 * * *","once":false,"x":118,"y":295,"z":"9d2467e1.62db98","wires":[["e04c1f0d.1fb3e"]]}]